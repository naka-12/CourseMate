//schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  name              String
  courses           Course[]
  followingRequests FollowingRequest[] @relation("FollowingRequestSender")
  followerRequests  FollowingRequest[] @relation("FollowingRequestReceiver")
  matches1          Match[]           @relation("User1Match")
  matches2          Match[]           @relation("User2Match")
}

model Course {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model FollowingRequest {
  id         Int             @id @default(autoincrement())
  sender     User            @relation("FollowingRequestSender", fields: [senderId], references: [id])
  senderId   Int
  receiver   User            @relation("FollowingRequestReceiver", fields: [receiverId], references: [id])
  receiverId Int
  status     FollowingStatus
}

enum FollowingStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Match {
  id             Int       @id @default(autoincrement())
  user1          User      @relation("User1Match", fields: [user1Id], references: [id])
  user1Id        Int
  user2          User      @relation("User2Match", fields: [user2Id], references: [id])
  user2Id        Int
  status         FollowingStatus
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}






